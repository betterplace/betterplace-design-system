import{j as e}from"./jsx-runtime-BlAj40OV.js";import{T as f}from"./TextInput-CJQ35zCQ.js";import{I as i}from"./Icon-gEYVkC9x.js";import{r as h}from"./index-Cs7sjTYM.js";import"./TextInputWrapper-BKbvKmKQ.js";import"./index-Bl6ORisp.js";import"./_commonjsHelpers-BosuxZz1.js";const x=["text","number","email","password","search","tel","date","datetime-local","time","url","color"],b={id:"2632:4260",url:"https://www.figma.com/file/PJ7OUutWRrSHW6qgaPNW1l/DS-betterplace-GENERAL?node-id=2632%3A4260",themes:[]};var g={BASE_URL:"./",DEV:!1,MODE:"production",PROD:!0,SSR:!1,STORYBOOK:"true",STORYBOOK_BASE_URL:"/betterplace-design-system/"};const y=o=>{const t=h.useId();return e.jsx(f,{...o,id:t})},I=o=>{const t=h.useRef(null);return e.jsx(f,{ref:t,...o,children:e.jsx("button",{onClick:()=>{var l;(l=t.current)!=null&&l.value&&(t.current.value="")},style:{background:"none",border:"none",padding:"none",width:"fit-content",marginLeft:"-40px"},children:e.jsx(i,{name:"x",title:"clear input",tabIndex:0,style:{verticalAlign:"middle"}})})})},a={euroSign:e.jsx(i,{name:"euroSign",id:"firstname-suffix",title:"euro sign"}),alertCircle:e.jsx(i,{name:"alertCircle"}),none:null},_={title:"Components/TextInput",component:y,argTypes:{label:{control:{type:"text"},description:"The label that is shown above the input field."},name:{control:{type:"text"},description:"Internal name of the field"},required:{control:{type:"boolean"},description:"Whether or not the field is required."},defaultValue:{control:{type:"text"},description:"A default value to prefill the input."},placeholder:{control:{type:"text"},description:"A placeholder for the input (e.g. an example text)."},type:{options:x,control:{type:"select"},description:"The input type."},description:{control:{type:"text"},description:"A description text to add more detail to the field."},error:{control:{type:"text"},description:"An error message to show on the field."},warning:{control:{type:"text"},description:"A warning message to show on the field."},errorDisplay:{control:{type:"radio"},options:["border","all"],table:{defaultValue:{summary:"all"}},description:"Controls the behaviour of how errors and warnings are displayed."},disabled:{control:"boolean",description:"Whether or not the field is disabled."},children:{table:{type:{summary:"ReactNode"}},control:{type:"radio"},options:Object.keys(a),mapping:a,description:"Option to add icons or other elements to the end of the input. When you want the screen reader to announce the title of the child element, you will need to add `id={${name}-suffix}`"}},parameters:{design:{type:"figspec",accessToken:g.STORYBOOK_FIGMA_ACCESS_TOKEN,url:b.url},vitest:{testFile:"TextInput.test.tsx"}}},r={args:{label:"First name",name:"firstname",children:a.none}},n={render:()=>e.jsx(I,{label:"Clearable input"})};var s,p,d;r.parameters={...r.parameters,docs:{...(s=r.parameters)==null?void 0:s.docs,source:{originalSource:`{
  args: {
    label: 'First name',
    name: 'firstname',
    children: rightIcons.none
  }
}`,...(d=(p=r.parameters)==null?void 0:p.docs)==null?void 0:d.source}}};var c,u,m;n.parameters={...n.parameters,docs:{...(c=n.parameters)==null?void 0:c.docs,source:{originalSource:`{
  render: () => {
    return <ClearableInputField label="Clearable input" />;
  }
}`,...(m=(u=n.parameters)==null?void 0:u.docs)==null?void 0:m.source}}};const E=["Default","ClearableInput"];export{n as ClearableInput,r as Default,E as __namedExportsOrder,_ as default};
