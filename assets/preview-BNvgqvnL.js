const e={added:0,failure:!1,filesAdded:0,filesRemoved:0,filesRemovedList:[],filesUnmatched:0,filesUpdated:0,matched:0,total:0,unchecked:0,uncheckedKeysByFile:[],unmatched:0,updated:0,didUpdate:!1},t=1729604326194,s=!0,a=[{assertionResults:[{ancestorTitles:["TokenTable"],fullName:"TokenTable should render the table with preview",status:"passed",title:"should render the table with preview",duration:66,failureMessages:[],meta:{}}],startTime:1729604351745,endTime:1729604351811,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/helpers/documentation/TokenTable.test.tsx"},{assertionResults:[{ancestorTitles:["sortTokens"],fullName:"sortTokens should sort tokens with negative values",status:"passed",title:"should sort tokens with negative values",duration:4,failureMessages:[],meta:{}},{ancestorTitles:["sortTokens"],fullName:"sortTokens should sort tokens with multi-digit numbers",status:"passed",title:"should sort tokens with multi-digit numbers",duration:1,failureMessages:[],meta:{}},{ancestorTitles:["sortTokens"],fullName:"sortTokens should sort tokens with non-numeric values",status:"passed",title:"should sort tokens with non-numeric values",duration:0,failureMessages:[],meta:{}}],startTime:1729604333042,endTime:1729604333047,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/helpers/documentation/sortTokens.test.ts"},{assertionResults:[{ancestorTitles:["JSON Pretty Print"],fullName:"JSON Pretty Print should correctly render the component",status:"passed",title:"should correctly render the component",duration:29,failureMessages:[],meta:{}}],startTime:1729604353291,endTime:1729604353320,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/JSONPrettyPrint/JSONPrettyPrint.test.tsx"},{assertionResults:[{ancestorTitles:["Alert"],fullName:"Alert should render the Alert correctly on success",status:"passed",title:"should render the Alert correctly on success",duration:51,failureMessages:[],meta:{}},{ancestorTitles:["Alert"],fullName:"Alert should render the Alert correctly on error",status:"passed",title:"should render the Alert correctly on error",duration:7,failureMessages:[],meta:{}}],startTime:1729604349984,endTime:1729604350042,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/Alert/Alert.test.tsx"},{assertionResults:[{ancestorTitles:["AmountField"],fullName:"AmountField should render an input element",status:"passed",title:"should render an input element",duration:56,failureMessages:[],meta:{}}],startTime:1729604355452,endTime:1729604355508,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/AmountField/AmountField.test.tsx"},{assertionResults:[{ancestorTitles:["ClientAmountField","sanitizeAmount"],fullName:"ClientAmountField sanitizeAmount should round the amount based on precision",status:"passed",title:"should round the amount based on precision",duration:49,failureMessages:[],meta:{}},{ancestorTitles:["ClientAmountField","getPrecisionFromStep"],fullName:"ClientAmountField getPrecisionFromStep should return the precision based on the step",status:"passed",title:"should return the precision based on the step",duration:0,failureMessages:[],meta:{}}],startTime:1729604338478,endTime:1729604338528,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/AmountField/ClientAmountField.test.tsx"},{assertionResults:[{ancestorTitles:["Badge"],fullName:"Badge should render a badge",status:"passed",title:"should render a badge",duration:15,failureMessages:[],meta:{}}],startTime:1729604356854,endTime:1729604356869,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/Badge/Badge.test.tsx"},{assertionResults:[{ancestorTitles:["Button"],fullName:"Button should render a button element",status:"passed",title:"should render a button element",duration:54,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should render the correct button content",status:"passed",title:"should render the correct button content",duration:7,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should render the correct kind class",status:"passed",title:"should render the correct kind class",duration:7,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should render the correct ghost class",status:"passed",title:"should render the correct ghost class",duration:7,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should render the correct size class",status:"passed",title:"should render the correct size class",duration:6,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should disable the button's interactions if the option is set",status:"passed",title:"should disable the button's interactions if the option is set",duration:11,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should set the button to aria-disabled and aria-busy if the isBusy option is set",status:"passed",title:"should set the button to aria-disabled and aria-busy if the isBusy option is set",duration:7,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should set the button to aria-disabled if disabled is set",status:"passed",title:"should set the button to aria-disabled if disabled is set",duration:9,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should pass the aria-disabled prop to the underlying element",status:"passed",title:"should pass the aria-disabled prop to the underlying element",duration:9,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should be interactive",status:"passed",title:"should be interactive",duration:40,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should render as default submit button if no onClick handler is given",status:"passed",title:"should render as default submit button if no onClick handler is given",duration:6,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should render a link instead of a button if the as prop is set to a",status:"passed",title:"should render a link instead of a button if the as prop is set to a",duration:5,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should render a disabled link if the isDisabled prop is set",status:"passed",title:"should render a disabled link if the isDisabled prop is set",duration:9,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should render a screen-reader-only description for a link if the isDisabled prop is set and aria-describedby is not",status:"passed",title:"should render a screen-reader-only description for a link if the isDisabled prop is set and aria-describedby is not",duration:5,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should render a screen-reader-only description for a button if the isDisabled prop is set and aria-describedby is not",status:"passed",title:"should render a screen-reader-only description for a button if the isDisabled prop is set and aria-describedby is not",duration:8,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should not render a screen-reader-only description for a button if the isDisabled prop is set and aria-describedby is set",status:"passed",title:"should not render a screen-reader-only description for a button if the isDisabled prop is set and aria-describedby is set",duration:6,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should actually disable the button if disabled_ is set",status:"passed",title:"should actually disable the button if disabled_ is set",duration:6,failureMessages:[],meta:{}},{ancestorTitles:["Button"],fullName:"Button should not actually disable the button-like link if disabled_ is set",status:"passed",title:"should not actually disable the button-like link if disabled_ is set",duration:3,failureMessages:[],meta:{}}],startTime:1729604329141,endTime:1729604329347,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/Button/ClientButton.test.tsx"},{assertionResults:[{ancestorTitles:["Card"],fullName:"Card should render the component",status:"passed",title:"should render the component",duration:15,failureMessages:[],meta:{}}],startTime:1729604356143,endTime:1729604356158,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/Card/Card.test.tsx"},{assertionResults:[{ancestorTitles:["Checkbox"],fullName:"Checkbox should show correct label",status:"passed",title:"should show correct label",duration:27,failureMessages:[],meta:{}},{ancestorTitles:["Checkbox"],fullName:"Checkbox should allow to check active checkbox",status:"passed",title:"should allow to check active checkbox",duration:58,failureMessages:[],meta:{}},{ancestorTitles:["Checkbox"],fullName:"Checkbox should allow to uncheck active checkbox",status:"passed",title:"should allow to uncheck active checkbox",duration:21,failureMessages:[],meta:{}},{ancestorTitles:["Checkbox"],fullName:"Checkbox should not allow to check disabled, checked checkbox",status:"passed",title:"should not allow to check disabled, checked checkbox",duration:10,failureMessages:[],meta:{}},{ancestorTitles:["Checkbox"],fullName:"Checkbox should set the checkbox to aria-disabled if the option is set",status:"passed",title:"should set the checkbox to aria-disabled if the option is set",duration:6,failureMessages:[],meta:{}},{ancestorTitles:["Checkbox"],fullName:"Checkbox should not allow to uncheck disabled, checked checkbox",status:"passed",title:"should not allow to uncheck disabled, checked checkbox",duration:10,failureMessages:[],meta:{}},{ancestorTitles:["Checkbox"],fullName:"Checkbox should actually disable the checkbox when disabled_ is passed",status:"passed",title:"should actually disable the checkbox when disabled_ is passed",duration:7,failureMessages:[],meta:{}}],startTime:1729604335561,endTime:1729604335700,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/Checkbox/ClientCheckbox.test.tsx"},{assertionResults:[{ancestorTitles:["<ColorInput />"],fullName:"<ColorInput /> should render the ColorInput trigger",status:"passed",title:"should render the ColorInput trigger",duration:60,failureMessages:[],meta:{}},{ancestorTitles:["<ColorInput />"],fullName:"<ColorInput /> should render the overlay when clicked on the input trigger",status:"passed",title:"should render the overlay when clicked on the input trigger",duration:102,failureMessages:[],meta:{}},{ancestorTitles:["<ColorInput />"],fullName:"<ColorInput /> should call onColorChange callback when the user selects a color",status:"passed",title:"should call onColorChange callback when the user selects a color",duration:80,failureMessages:[],meta:{}},{ancestorTitles:["<ColorInput />"],fullName:"<ColorInput /> should show trasnparent option when it is set in the props",status:"passed",title:"should show trasnparent option when it is set in the props",duration:69,failureMessages:[],meta:{}}],startTime:1729604337404,endTime:1729604337716,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/ColorInput/ColorInput.test.tsx"},{assertionResults:[{ancestorTitles:["CopyText","when used with a button"],fullName:"CopyText when used with a button copies the text to clipboard",status:"passed",title:"copies the text to clipboard",duration:64,failureMessages:[],meta:{}}],startTime:1729604346125,endTime:1729604346189,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/CopyText/CopyText.test.tsx"},{assertionResults:[{ancestorTitles:["Dropdown"],fullName:"Dropdown should render a select element",status:"passed",title:"should render a select element",duration:61,failureMessages:[],meta:{}},{ancestorTitles:["Dropdown"],fullName:"Dropdown should render label and hint",status:"passed",title:"should render label and hint",duration:17,failureMessages:[],meta:{}},{ancestorTitles:["Dropdown"],fullName:"Dropdown should disable interactions with the input when the option is set",status:"passed",title:"should disable interactions with the input when the option is set",duration:37,failureMessages:[],meta:{}},{ancestorTitles:["Dropdown"],fullName:"Dropdown should update value, when new option is selected",status:"passed",title:"should update value, when new option is selected",duration:24,failureMessages:[],meta:{}},{ancestorTitles:["Dropdown"],fullName:"Dropdown should actually disable the dropdown when disabled_ is set",status:"passed",title:"should actually disable the dropdown when disabled_ is set",duration:15,failureMessages:[],meta:{}}],startTime:1729604336444,endTime:1729604336599,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/Dropdown/Dropdown.test.tsx"},{assertionResults:[{ancestorTitles:["Fieldset"],fullName:"Fieldset should correctly display the title, hint and checkbox labels",status:"passed",title:"should correctly display the title, hint and checkbox labels",duration:74,failureMessages:[],meta:{}},{ancestorTitles:["Fieldset"],fullName:"Fieldset should correctly display an asterisk/required label when required",status:"passed",title:"should correctly display an asterisk/required label when required",duration:8,failureMessages:[],meta:{}},{ancestorTitles:["Fieldset"],fullName:"Fieldset should correctly display error message",status:"passed",title:"should correctly display error message",duration:14,failureMessages:[],meta:{}},{ancestorTitles:["Fieldset","Radio"],fullName:"Fieldset Radio should correctly have only one selected element at a time",status:"passed",title:"should correctly have only one selected element at a time",duration:36,failureMessages:[],meta:{}}],startTime:1729604334741,endTime:1729604334874,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/Fieldset/Fieldset.test.tsx"},{assertionResults:[{ancestorTitles:["Heading"],fullName:"Heading should render a heading element with the correct level",status:"passed",title:"should render a heading element with the correct level",duration:50,failureMessages:[],meta:{}},{ancestorTitles:["Heading"],fullName:"Heading should render a heading with subtitle",status:"passed",title:"should render a heading with subtitle",duration:11,failureMessages:[],meta:{}}],startTime:1729604345290,endTime:1729604345351,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/Heading/Heading.test.tsx"},{assertionResults:[{ancestorTitles:["Icon"],fullName:"Icon should render an SVG icon with the correct attributes",status:"passed",title:"should render an SVG icon with the correct attributes",duration:49,failureMessages:[],meta:{}},{ancestorTitles:["Icon"],fullName:"Icon should render an SVG icon that is hidden from screen readers",status:"passed",title:"should render an SVG icon that is hidden from screen readers",duration:3,failureMessages:[],meta:{}}],startTime:1729604343744,endTime:1729604343796,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/Icon/Icon.test.tsx"},{assertionResults:[{ancestorTitles:["renders icon at the correct place"],fullName:"renders icon at the correct place should render icon to the left",status:"passed",title:"should render icon to the left",duration:57,failureMessages:[],meta:{}},{ancestorTitles:["renders icon at the correct place"],fullName:"renders icon at the correct place should render icon to the right",status:"passed",title:"should render icon to the right",duration:8,failureMessages:[],meta:{}},{ancestorTitles:["renders icon at the correct place"],fullName:"renders icon at the correct place should render icon only an icon with the correct styling",status:"passed",title:"should render icon only an icon with the correct styling",duration:8,failureMessages:[],meta:{}}],startTime:1729604339213,endTime:1729604339286,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/IconButton/IconButton.test.tsx"},{assertionResults:[{ancestorTitles:["LoadingSkeleton"],fullName:"LoadingSkeleton should render a LoadingSkeleton component",status:"passed",title:"should render a LoadingSkeleton component",duration:43,failureMessages:[],meta:{}}],startTime:1729604354016,endTime:1729604354059,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/LoadingSkeleton/LoadingSkeleton.test.tsx"},{assertionResults:[{ancestorTitles:["RadioButton"],fullName:"RadioButton should show correct label",status:"passed",title:"should show correct label",duration:32,failureMessages:[],meta:{}},{ancestorTitles:["RadioButton"],fullName:"RadioButton should allow to check active radio button",status:"passed",title:"should allow to check active radio button",duration:69,failureMessages:[],meta:{}},{ancestorTitles:["RadioButton"],fullName:"RadioButton should set the radio button to aria-disabled if the option is set",status:"passed",title:"should set the radio button to aria-disabled if the option is set",duration:24,failureMessages:[],meta:{}},{ancestorTitles:["RadioButton"],fullName:"RadioButton should actually disable the radio when disabled_ is set",status:"passed",title:"should actually disable the radio when disabled_ is set",duration:8,failureMessages:[],meta:{}}],startTime:1729604340728,endTime:1729604340862,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/RadioButton/ClientRadioButton.test.tsx"},{assertionResults:[{ancestorTitles:["<RangeInput />"],fullName:"<RangeInput /> should render a slider input",status:"passed",title:"should render a slider input",duration:52,failureMessages:[],meta:{}},{ancestorTitles:["<RangeInput />"],fullName:"<RangeInput /> should call onChange when the slider is used",status:"passed",title:"should call onChange when the slider is used",duration:16,failureMessages:[],meta:{}},{ancestorTitles:["<RangeInput />"],fullName:"<RangeInput /> should set the value by the props",status:"passed",title:"should set the value by the props",duration:20,failureMessages:[],meta:{}}],startTime:1729604341609,endTime:1729604341697,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/RangeInput/RangeInput.test.tsx"},{assertionResults:[{ancestorTitles:["TextInput"],fullName:"TextInput should render a text input with the specified type",status:"passed",title:"should render a text input with the specified type",duration:35,failureMessages:[],meta:{}},{ancestorTitles:["TextInput"],fullName:"TextInput should render a text input with the specified name",status:"passed",title:"should render a text input with the specified name",duration:6,failureMessages:[],meta:{}},{ancestorTitles:["TextInput"],fullName:"TextInput should render a text input with the specified name and id",status:"passed",title:"should render a text input with the specified name and id",duration:6,failureMessages:[],meta:{}},{ancestorTitles:["TextInput"],fullName:"TextInput should render with a description",status:"passed",title:"should render with a description",duration:29,failureMessages:[],meta:{}},{ancestorTitles:["TextInput"],fullName:"TextInput should render an invalid input with error message",status:"passed",title:"should render an invalid input with error message",duration:7,failureMessages:[],meta:{}},{ancestorTitles:["TextInput"],fullName:"TextInput should render with a warning",status:"passed",title:"should render with a warning",duration:7,failureMessages:[],meta:{}},{ancestorTitles:["TextInput"],fullName:"TextInput should render a valid input",status:"passed",title:"should render a valid input",duration:4,failureMessages:[],meta:{}},{ancestorTitles:["TextInput"],fullName:"TextInput should render an enabled input",status:"passed",title:"should render an enabled input",duration:3,failureMessages:[],meta:{}},{ancestorTitles:["TextInput"],fullName:"TextInput should render a disabled input",status:"passed",title:"should render a disabled input",duration:4,failureMessages:[],meta:{}},{ancestorTitles:["TextInput"],fullName:"TextInput should render a required input with required marker",status:"passed",title:"should render a required input with required marker",duration:14,failureMessages:[],meta:{}},{ancestorTitles:["TextInput"],fullName:"TextInput should render an optional input",status:"passed",title:"should render an optional input",duration:8,failureMessages:[],meta:{}},{ancestorTitles:["TextInput"],fullName:"TextInput should allow only one line of text input",status:"passed",title:"should allow only one line of text input",duration:122,failureMessages:[],meta:{}},{ancestorTitles:["TextInput"],fullName:"TextInput should render an input with an icon on the right side",status:"passed",title:"should render an input with an icon on the right side",duration:11,failureMessages:[],meta:{}}],startTime:1729604331227,endTime:1729604331483,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/TextInput/TextInput.test.tsx"},{assertionResults:[{ancestorTitles:["TextInputWrapper"],fullName:"TextInputWrapper should render the child component with a label",status:"passed",title:"should render the child component with a label",duration:55,failureMessages:[],meta:{}},{ancestorTitles:["TextInputWrapper"],fullName:"TextInputWrapper should render an input with a complex label",status:"passed",title:"should render an input with a complex label",duration:15,failureMessages:[],meta:{}}],startTime:1729604344511,endTime:1729604344581,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/TextInputWrapper/TextInputWrapper.test.tsx"},{assertionResults:[{ancestorTitles:["TextLink"],fullName:"TextLink should render a text link",status:"passed",title:"should render a text link",duration:49,failureMessages:[],meta:{}}],startTime:1729604354723,endTime:1729604354772,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/TextLink/TextLink.test.tsx"},{assertionResults:[{ancestorTitles:["Textarea"],fullName:"Textarea should allow multiline input",status:"passed",title:"should allow multiline input",duration:242,failureMessages:[],meta:{}}],startTime:1729604350773,endTime:1729604351015,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/Textarea/Textarea.test.tsx"},{assertionResults:[{ancestorTitles:["Tile"],fullName:"Tile renders a container for the children",status:"passed",title:"renders a container for the children",duration:62,failureMessages:[],meta:{}}],startTime:1729604347669,endTime:1729604347731,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/Tile/Tile.test.tsx"},{assertionResults:[{ancestorTitles:["ToggleButton -> Single select (radio)"],fullName:"ToggleButton -> Single select (radio) should show correct label",status:"passed",title:"should show correct label",duration:48,failureMessages:[],meta:{}},{ancestorTitles:["ToggleButton -> Single select (radio)"],fullName:"ToggleButton -> Single select (radio) should allow to check active ToggleButton",status:"passed",title:"should allow to check active ToggleButton",duration:35,failureMessages:[],meta:{}},{ancestorTitles:["ToggleButton -> Single select (radio)"],fullName:"ToggleButton -> Single select (radio) should set the aria-disabled on the ToggleButton if the option is set",status:"passed",title:"should set the aria-disabled on the ToggleButton if the option is set",duration:21,failureMessages:[],meta:{}},{ancestorTitles:["ToggleButton -> Multi select (checkbox)"],fullName:"ToggleButton -> Multi select (checkbox) should allow to check active ToggleButton",status:"passed",title:"should allow to check active ToggleButton",duration:17,failureMessages:[],meta:{}},{ancestorTitles:["ToggleButton -> Multi select (checkbox)"],fullName:"ToggleButton -> Multi select (checkbox) should allow to uncheck active ToggleButton",status:"passed",title:"should allow to uncheck active ToggleButton",duration:15,failureMessages:[],meta:{}},{ancestorTitles:["ToggleButton -> Multi select (checkbox)"],fullName:"ToggleButton -> Multi select (checkbox) should not allow to check disabled, ToggleButton",status:"passed",title:"should not allow to check disabled, ToggleButton",duration:14,failureMessages:[],meta:{}},{ancestorTitles:["ToggleButton -> Multi select (checkbox)"],fullName:"ToggleButton -> Multi select (checkbox) should not allow to uncheck disabled, ToggleButton",status:"passed",title:"should not allow to uncheck disabled, ToggleButton",duration:18,failureMessages:[],meta:{}}],startTime:1729604333765,endTime:1729604333935,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/ToggleButton/ToggleButton.test.tsx"},{assertionResults:[{ancestorTitles:["ToggleSwitch"],fullName:"ToggleSwitch should show correct label",status:"passed",title:"should show correct label",duration:27,failureMessages:[],meta:{}},{ancestorTitles:["ToggleSwitch"],fullName:"ToggleSwitch should allow to check active ToggleSwitch",status:"passed",title:"should allow to check active ToggleSwitch",duration:53,failureMessages:[],meta:{}},{ancestorTitles:["ToggleSwitch"],fullName:"ToggleSwitch should allow to uncheck active ToggleSwitch",status:"passed",title:"should allow to uncheck active ToggleSwitch",duration:19,failureMessages:[],meta:{}},{ancestorTitles:["ToggleSwitch"],fullName:"ToggleSwitch should not allow to check disabled, checked ToggleSwitch",status:"passed",title:"should not allow to check disabled, checked ToggleSwitch",duration:9,failureMessages:[],meta:{}},{ancestorTitles:["ToggleSwitch"],fullName:"ToggleSwitch should set the ToggleSwitch to aria-disabled if the option is set",status:"passed",title:"should set the ToggleSwitch to aria-disabled if the option is set",duration:6,failureMessages:[],meta:{}},{ancestorTitles:["ToggleSwitch"],fullName:"ToggleSwitch should not allow to uncheck disabled, checked ToggleSwitch",status:"passed",title:"should not allow to uncheck disabled, checked ToggleSwitch",duration:6,failureMessages:[],meta:{}},{ancestorTitles:["ToggleSwitch"],fullName:"ToggleSwitch should actually disable the ToggleSwitch when disabled_ is passed",status:"passed",title:"should actually disable the ToggleSwitch when disabled_ is passed",duration:6,failureMessages:[],meta:{}}],startTime:1729604332208,endTime:1729604332334,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/ToggleSwitch/ToggleSwitch.test.tsx"},{assertionResults:[{ancestorTitles:["Tooltip","tooltip position calculation"],fullName:"Tooltip tooltip position calculation should calculate the position of the tooltip",status:"passed",title:"should calculate the position of the tooltip",duration:2,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip","tooltip position calculation"],fullName:"Tooltip tooltip position calculation should place the tooltip below the trigger if there is no space",status:"passed",title:"should place the tooltip below the trigger if there is no space",duration:1,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip","tooltip position calculation"],fullName:"Tooltip tooltip position calculation should calculate the position of the tooltip if it overflows to the left",status:"passed",title:"should calculate the position of the tooltip if it overflows to the left",duration:0,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip","tooltip position calculation"],fullName:"Tooltip tooltip position calculation should calculate the position of the tooltip if it overflows to the right",status:"passed",title:"should calculate the position of the tooltip if it overflows to the right",duration:1,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip","tooltip position calculation"],fullName:"Tooltip tooltip position calculation should adjust the position of the if it overflows to the right and arrow would be detached",status:"passed",title:"should adjust the position of the if it overflows to the right and arrow would be detached",duration:0,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip","tooltip position calculation"],fullName:"Tooltip tooltip position calculation should reduce the margin if the tooltip is too wide",status:"passed",title:"should reduce the margin if the tooltip is too wide",duration:1,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:"Tooltip should render text as trigger",status:"passed",title:"should render text as trigger",duration:40,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:"Tooltip should show tooltip content when hovered over the trigger",status:"passed",title:"should show tooltip content when hovered over the trigger",duration:73,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:"Tooltip should hide tooltip content when unhovered from the trigger",status:"passed",title:"should hide tooltip content when unhovered from the trigger",duration:30,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:"Tooltip should show tooltip content when pressing enter",status:"passed",title:"should show tooltip content when pressing enter",duration:31,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:"Tooltip should show the tooltip content when pressing space",status:"passed",title:"should show the tooltip content when pressing space",duration:22,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:"Tooltip should show tooltip content when in focus",status:"passed",title:"should show tooltip content when in focus",duration:19,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:"Tooltip should hide tooltip content when not in focus",status:"passed",title:"should hide tooltip content when not in focus",duration:25,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:"Tooltip should render icon as trigger",status:"passed",title:"should render icon as trigger",duration:12,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:"Tooltip should show tooltip when clicked on trigger",status:"passed",title:"should show tooltip when clicked on trigger",duration:30,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:"Tooltip should hide tooltip when clicked outside",status:"passed",title:"should hide tooltip when clicked outside",duration:68,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:"Tooltip should set the role to 'button' when the element has no explicit role",status:"passed",title:"should set the role to 'button' when the element has no explicit role",duration:3,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:'Tooltip should set the role to "button" and the aria-roledescription to the original role, when the role is explicitly set',status:"passed",title:'should set the role to "button" and the aria-roledescription to the original role, when the role is explicitly set',duration:6,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:'Tooltip should set the role role to "button" and the aria-roledescription to based on the input "type"',status:"passed",title:'should set the role role to "button" and the aria-roledescription to based on the input "type"',duration:18,failureMessages:[],meta:{}},{ancestorTitles:["Tooltip"],fullName:"Tooltip should make the trigger focusable if it's non-interactive",status:"passed",title:"should make the trigger focusable if it's non-interactive",duration:6,failureMessages:[],meta:{}}],startTime:1729604327901,endTime:1729604328289,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/Tooltip/Tooltip.test.tsx"},{assertionResults:[{ancestorTitles:["TooltipTrigger"],fullName:"TooltipTrigger should render the default trigger button",status:"passed",title:"should render the default trigger button",duration:60,failureMessages:[],meta:{}},{ancestorTitles:["TooltipTrigger"],fullName:"TooltipTrigger should render a button with custom text",status:"passed",title:"should render a button with custom text",duration:16,failureMessages:[],meta:{}},{ancestorTitles:["TooltipTrigger"],fullName:"TooltipTrigger should not trigger submit behaviour when placed in a form",status:"passed",title:"should not trigger submit behaviour when placed in a form",duration:39,failureMessages:[],meta:{}}],startTime:1729604342920,endTime:1729604343035,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/TooltipTrigger/TooltipTrigger.test.tsx"},{assertionResults:[{ancestorTitles:["🪝 useClickOutside"],fullName:"🪝 useClickOutside should trigger callback when clicked on target element",status:"todo",title:"should trigger callback when clicked on target element",failureMessages:[],meta:{}},{ancestorTitles:["🪝 useClickOutside"],fullName:"🪝 useClickOutside should not trigger callback when clicked outside the target element",status:"todo",title:"should not trigger callback when clicked outside the target element",failureMessages:[],meta:{}},{ancestorTitles:["🪝 useColorPickerPopover"],fullName:'🪝 useColorPickerPopover should set active property to true, when triggering "show" method',status:"passed",title:'should set active property to true, when triggering "show" method',duration:13,failureMessages:[],meta:{}},{ancestorTitles:["🪝 useColorPickerPopover"],fullName:'🪝 useColorPickerPopover should set active property to false, when triggering "hide" method',status:"passed",title:'should set active property to false, when triggering "hide" method',duration:3,failureMessages:[],meta:{}},{ancestorTitles:["🪝 useColorPickerPopover"],fullName:'🪝 useColorPickerPopover should toggle active property, when triggering "toggle" method',status:"passed",title:'should toggle active property, when triggering "toggle" method',duration:2,failureMessages:[],meta:{}},{ancestorTitles:["🪝 useColorPickerPopover"],fullName:"🪝 useColorPickerPopover should return background when active",status:"todo",title:"should return background when active",failureMessages:[],meta:{}}],startTime:1729604339964,endTime:1729604339983,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/ColorInput/hooks/hooks.test.tsx"},{assertionResults:[{ancestorTitles:["LayoutCenter"],fullName:"LayoutCenter should render the content of the layout component",status:"passed",title:"should render the content of the layout component",duration:54,failureMessages:[],meta:{}},{ancestorTitles:["LayoutCenter"],fullName:"LayoutCenter should render the layout component as nav",status:"passed",title:"should render the layout component as nav",duration:14,failureMessages:[],meta:{}}],startTime:1729604346877,endTime:1729604346945,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/layouts/LayoutCenter/LayoutCenter.test.tsx"},{assertionResults:[{ancestorTitles:["LayoutCluster"],fullName:"LayoutCluster should render a cluster",status:"passed",title:"should render a cluster",duration:54,failureMessages:[],meta:{}},{ancestorTitles:["LayoutCluster"],fullName:"LayoutCluster should render a cluster as nav",status:"passed",title:"should render a cluster as nav",duration:15,failureMessages:[],meta:{}}],startTime:1729604348397,endTime:1729604348466,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/layouts/LayoutCluster/LayoutCluster.test.tsx"},{assertionResults:[{ancestorTitles:["LayoutGrid"],fullName:"LayoutGrid should render a grid",status:"passed",title:"should render a grid",duration:56,failureMessages:[],meta:{}}],startTime:1729604352547,endTime:1729604352603,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/layouts/LayoutGrid/LayoutGrid.test.tsx"},{assertionResults:[{ancestorTitles:["LayoutModal"],fullName:"LayoutModal should have a title describing the modal",status:"passed",title:"should have a title describing the modal",duration:69,failureMessages:[],meta:{}},{ancestorTitles:["LayoutModal"],fullName:"LayoutModal should show two close buttons if no custom actions have been defined",status:"passed",title:"should show two close buttons if no custom actions have been defined",duration:31,failureMessages:[],meta:{}},{ancestorTitles:["LayoutModal"],fullName:"LayoutModal should show custom actions when they have been defined",status:"passed",title:"should show custom actions when they have been defined",duration:25,failureMessages:[],meta:{}},{ancestorTitles:["LayoutModal"],fullName:"LayoutModal should trap focus",status:"passed",title:"should trap focus",duration:44,failureMessages:[],meta:{}},{ancestorTitles:["LayoutModal"],fullName:"LayoutModal should not trigger the form submit action when any of the close buttons is clicked",status:"passed",title:"should not trigger the form submit action when any of the close buttons is clicked",duration:39,failureMessages:[],meta:{}}],startTime:1729604330265,endTime:1729604330473,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/layouts/LayoutModal/LayoutModal.test.tsx"},{assertionResults:[{ancestorTitles:["LayoutStack"],fullName:"LayoutStack should render a stack",status:"passed",title:"should render a stack",duration:56,failureMessages:[],meta:{}},{ancestorTitles:["LayoutStack"],fullName:"LayoutStack should render a stack as nav",status:"passed",title:"should render a stack as nav",duration:13,failureMessages:[],meta:{}}],startTime:1729604349165,endTime:1729604349235,status:"passed",message:"",name:"/home/semaphore/frontend/apps/design-system/src/lib/components/layouts/LayoutStack/LayoutStack.test.tsx"}],o={numTotalTestSuites:77,numPassedTestSuites:77,numFailedTestSuites:0,numPendingTestSuites:0,numTotalTests:139,numPassedTests:139,numFailedTests:0,numPendingTests:0,numTodoTests:3,snapshot:e,startTime:t,success:s,testResults:a},l={actions:{argTypesRegex:"^on[A-Z].*"},controls:{expanded:!0,matchers:{color:/(background|color)$/i,date:/Date$/}},docs:{toc:{headingSelector:"h2, h3"}},options:{storySort:{order:["About the design system","Guides",["UX design guide","Content guide","Accessibility guide",["Knowledge","Best practices","Workflow"],"Engineering guide","Manual testing guide"],"Tokens",["How we use tokens","Colors","Typography","Measures","Spacing","Sizing","Borders","Shadows","Opacities","Core token reference"],"Elements",["Overview"],"Components",["How we use components"],"Patterns",["Overview"],"Hooks","Lib"]}},vitest:{testResults:o}},i=["autodocs"];export{l as parameters,i as tags};
